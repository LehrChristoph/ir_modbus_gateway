#ifndef IR_COMMANDS_H
#define IR_COMMANDS_H

#include <Arduino.h>

const uint32_t pwr_NEC = 0x4CB3817E;
const uint16_t pwr[] = {9078, 4500,  580, 560,  572, 1720,  572, 540,  572, 568,  572, 1720,  574, 1690,  574, 540,  572, 568,  
    572, 1718,  576, 540,  574, 1718,  574, 1668,  598, 540,  600, 542,  598, 1668,  598, 1668,  598, 1666,  600, 542,  598, 568,  
    572, 568,  572, 568,  572, 568,  572, 570,  570, 1668,  598, 570,  570, 1668,  574, 1692,  574, 1690,  574, 1690,  574, 1690,  
    576, 1690,  600, 542,  574, 39936,  9052, 2250,  598};  // NEC 4CB3817E;
const uint16_t pwr_len = 71;

const uint32_t src_hdmi_NEC = 0x4CB3619E;
const uint16_t src_hdmi[] = {9076, 4500,  600, 540,  572, 1720,  574, 540,  572, 568,  596, 1696,  572, 1692,  572, 542,  572, 568, 
    572, 1720,  572, 542,  572, 1720,  548, 1716,  550, 564,  572, 568,  572, 1720,  574, 1692,  572, 544,  598, 1690,  576, 1690,  
    576, 540,  598, 542,  598, 542,  600, 542,  598, 1666,  598, 1666,  600, 570,  570, 546,  594, 1668,  598, 1668,  598, 1668,  
    574, 1692,  572, 568,  572, 39916,  9048, 2252,  574};  // NEC 4CB3619E
const uint16_t src_hdmi_len = 71;

const uint32_t src_vga_NEC = 0x4CB30BF4;
const uint16_t src_vga[] = {9074, 4498,  572, 490,  648, 1718,  548, 568,  594, 544,  572, 1716,  550, 1716,  574, 540,  572, 568,  572, 1716,  574, 544,  572, 1714,  574, 1692,  550, 566,  574, 570,  594, 1690,  576, 1668,  596, 572,  570, 570,  572, 570,  570, 570,  572, 1666,  596, 570,  570, 1666,  598, 1666,  598, 1668,  598, 1668,  596, 1668,  598, 1668,  572, 570,  570, 1692,  572, 570,  572, 568,  572, 39900,  9048, 2252,  574};  // NEC 4CB30BF4
const uint16_t src_vga_len = 71;

const uint32_t volume_up_epson = 0x4CB331CE;
const uint16_t volume_up[] = {9048, 4520,  574, 568,  574, 1692,  570, 568,  572, 568,  574, 1692,  572, 1692,  568, 572,  568, 572,  570, 1696,  570, 570,  572, 1692,  572, 1694,  568, 572,  570, 570,  566, 1698,  568, 1696,  568, 574,  566, 572,  570, 1696,  568, 1696,  566, 574,  566, 574,  568, 574,  566, 1698,  568, 1696,  568, 1696,  568, 574,  566, 574,  566, 1698,  564, 1700,  564, 1700,  564, 576,  564, 39934,  9040, 4528,  566, 576,  562, 1700,  564, 578,  562, 576,  564, 1700,  564, 1702,  562, 578,  562, 600,  540, 1724,  540, 578,  562, 1724,  540, 1724,  540, 600,  540, 600,  540, 1724,  540, 1724,  540, 600,  540, 600,  540, 1724,  540, 1724,  540, 600,  540, 600,  540, 600,  540, 1724,  540, 1724,  542, 1722,  540, 600,  540, 600,  540, 1724,  542, 1724,  540, 1724,  542, 598,  540};  // EPSON (Repeat) 4CB331CE
const uint16_t volume_up_len = 135;

const uint32_t volume_down_epson = 0x4CB3F10E;
const uint16_t volume_down[] = {9092, 4478,  618, 550,  592, 1674,  616, 524,  592, 548,  592, 1672,  592, 1672,  594, 546,  592, 548,  618, 1648,  592, 548,  592, 1672,  592, 1672,  592, 548,  592, 548,  592, 1672,  592, 1674,  592, 1674,  618, 1646,  592, 1672,  592, 1674,  590, 550,  592, 548,  592, 548,  592, 1648,  616, 550,  592, 548,  592, 550,  588, 550,  590, 1674,  606, 1658,  588, 1676,  590, 550,  590, 39872,  9088, 4480,  614, 556,  588, 1648,  616, 552,  588, 552,  588, 1648,  616, 1648,  614, 552,  588, 552,  590, 1648,  616, 550,  590, 1646,  614, 1650,  616, 552,  616, 524,  590, 1648,  616, 1648,  614, 1650,  640, 1624,  616, 1650,  612, 1652,  614, 554,  612, 526,  616, 524,  616, 1620,  614, 556,  616, 524,  614, 526,  598, 542,  588, 1648,  612, 1652,  640, 1624,  616, 554,  590};  // EPSON (Repeat) 4CB3F10E
const uint16_t volume_down_len = 135;

const uint32_t mute_NEC = 0x4CB349B6;
const uint16_t mute[] = {9118, 4450,  644, 524,  618, 1646,  616, 522,  616, 524,  618, 1646,  616, 1646,  618, 522,  618, 522,  618, 1646,  618, 522,  618, 1646,  618, 1622,  642, 522,  618, 522,  616, 1620,  644, 1646,  618, 524,  592, 1646,  642, 524,  592, 548,  594, 1644,  642, 524,  616, 524,  616, 1624,  632, 1628,  618, 546,  616, 1624,  640, 1648,  592, 548,  592, 1644,  618, 1648,  616, 548,  592, 39858,  9088, 2206,  618};  // NEC 4CB349B6
const uint16_t mute_len = 71;

const uint16_t ir_frequency = 38;

#endif